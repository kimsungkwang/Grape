{"ast":null,"code":"var _jsxFileName = \"/Users/kimsungkwang/WORKSPACE/Nodejs/Grape/prepare/front/pages/user/[id].js\";\nvar __jsx = React.createElement;\n// 특정 사용자 개사글만 불러오기\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Avatar, Card } from \"antd\";\nimport { END } from \"redux-saga\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport { useInView } from \"react-intersection-observer\";\nimport axios from \"axios\";\nimport { LOAD_POSTS_REQUEST, LOAD_USER_POSTS_REQUEST } from \"../../reducers/post\";\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from \"../../reducers/user\";\nimport PostCard from \"../../components/PostCard\";\nimport wrapper from \"../../store/configureStore\";\nimport AppLayout from \"../../components/AppLayout\";\nfunction User() {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    mainPosts,\n    hasMorePosts,\n    loadPostsLoading\n  } = useSelector(state => state.post);\n  const {\n    userInfo,\n    me\n  } = useSelector(state => state.user);\n  const [ref, inView] = useInView();\n  useEffect(() => {\n    if (inView && hasMorePosts && !loadPostsLoading) {\n      var _mainPosts;\n      const lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n      dispatch({\n        type: LOAD_POSTS_REQUEST,\n        lastId,\n        data: id\n      });\n    }\n  }, [inView, hasMorePosts, loadPostsLoading, mainPosts, id]);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, userInfo && __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, userInfo.nickname, \"\\uB2D8\\uC758 \\uAE00\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: `${userInfo.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `${userInfo.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: `${userInfo.nickname}님의 게시글`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: \"https://grape.com/favicon.ico\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `https://grape.com/user/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })), userInfo && userInfo.id !== (me === null || me === void 0 ? void 0 : me.id) ? __jsx(Card, {\n    style: {\n      marginBottom: 20\n    },\n    actions: [__jsx(\"div\", {\n      key: \"post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, \"\\uD3EC\\uC2A4\\uD2B8\", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }), userInfo.Posts), __jsx(\"div\", {\n      key: \"following\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    }, \"\\uD314\\uB85C\\uC789\", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }), userInfo.Followings), __jsx(\"div\", {\n      key: \"follower\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"\\uD314\\uB85C\\uC6CC\", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }), userInfo.Followers)],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 30\n      }\n    }, userInfo.nickname[0]),\n    title: userInfo.nickname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  })) : null, mainPosts.map(c => __jsx(PostCard, {\n    key: c.id,\n    post: c,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    ref: hasMorePosts && !loadPostsLoading ? ref : undefined,\n    style: {\n      height: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }));\n}\nexport const getServerSideProps = wrapper.getServerSideProps(store => async ({\n  req,\n  params\n}) => {\n  const cookie = req ? req.headers.cookie : \"\";\n  axios.defaults.headers.Cookie = \"\";\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: params.id\n  });\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch({\n    type: LOAD_USER_REQUEST,\n    data: params.id\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\nexport default User;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","Avatar","Card","END","Head","useRouter","useInView","axios","LOAD_POSTS_REQUEST","LOAD_USER_POSTS_REQUEST","LOAD_MY_INFO_REQUEST","LOAD_USER_REQUEST","PostCard","wrapper","AppLayout","User","dispatch","router","id","query","mainPosts","hasMorePosts","loadPostsLoading","state","post","userInfo","me","user","ref","inView","lastId","length","type","data","nickname","marginBottom","Posts","Followings","Followers","map","c","undefined","height","getServerSideProps","store","req","params","cookie","headers","defaults","Cookie","sagaTask","toPromise"],"sources":["/Users/kimsungkwang/WORKSPACE/Nodejs/Grape/prepare/front/pages/user/[id].js"],"sourcesContent":["// 특정 사용자 개사글만 불러오기\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Avatar, Card } from \"antd\";\nimport { END } from \"redux-saga\";\nimport Head from \"next/head\";\nimport { useRouter } from \"next/router\";\nimport { useInView } from \"react-intersection-observer\";\n\nimport axios from \"axios\";\nimport { LOAD_POSTS_REQUEST, LOAD_USER_POSTS_REQUEST } from \"../../reducers/post\";\nimport { LOAD_MY_INFO_REQUEST, LOAD_USER_REQUEST } from \"../../reducers/user\";\nimport PostCard from \"../../components/PostCard\";\nimport wrapper from \"../../store/configureStore\";\nimport AppLayout from \"../../components/AppLayout\";\n\nfunction User() {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const { id } = router.query;\n  const { mainPosts, hasMorePosts, loadPostsLoading } = useSelector((state) => state.post);\n  const { userInfo, me } = useSelector((state) => state.user);\n\n  const [ref, inView] = useInView();\n\n  useEffect(() => {\n    if (inView && hasMorePosts && !loadPostsLoading) {\n      const lastId = mainPosts[mainPosts.length - 1]?.id;\n      dispatch({\n        type: LOAD_POSTS_REQUEST,\n        lastId,\n        data: id,\n      });\n    }\n  }, [inView, hasMorePosts, loadPostsLoading, mainPosts, id]);\n\n  return (\n    <AppLayout>\n      {userInfo && (\n        <Head>\n          <title>\n            {userInfo.nickname}\n            님의 글\n          </title>\n          <meta name=\"description\" content={`${userInfo.nickname}님의 게시글`} />\n          <meta property=\"og:title\" content={`${userInfo.nickname}님의 게시글`} />\n          <meta property=\"og:description\" content={`${userInfo.nickname}님의 게시글`} />\n          <meta property=\"og:image\" content=\"https://grape.com/favicon.ico\" />\n          <meta property=\"og:url\" content={`https://grape.com/user/${id}`} />\n        </Head>\n      )}\n      {userInfo && userInfo.id !== me?.id ? (\n        <Card\n          style={{ marginBottom: 20 }}\n          actions={[\n            <div key=\"post\">\n              포스트\n              <br />\n              {userInfo.Posts}\n            </div>,\n            <div key=\"following\">\n              팔로잉\n              <br />\n              {userInfo.Followings}\n            </div>,\n            <div key=\"follower\">\n              팔로워\n              <br />\n              {userInfo.Followers}\n            </div>,\n          ]}>\n          <Card.Meta avatar={<Avatar>{userInfo.nickname[0]}</Avatar>} title={userInfo.nickname} />\n        </Card>\n      ) : null}\n      {mainPosts.map((c) => (\n        <PostCard key={c.id} post={c} />\n      ))}\n      <div ref={hasMorePosts && !loadPostsLoading ? ref : undefined} style={{ height: 10 }} />\n    </AppLayout>\n  );\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps((store) => async ({ req, params }) => {\n  const cookie = req ? req.headers.cookie : \"\";\n  axios.defaults.headers.Cookie = \"\";\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  store.dispatch({\n    type: LOAD_USER_POSTS_REQUEST,\n    data: params.id,\n  });\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST,\n  });\n  store.dispatch({\n    type: LOAD_USER_REQUEST,\n    data: params.id,\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\n\nexport default User;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}