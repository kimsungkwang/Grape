{"ast":null,"code":"import { all, delay, fork, put, takeLatest, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, CHANGE_NICKNAME_FAILURE, CHANGE_NICKNAME_REQUEST, CHANGE_NICKNAME_SUCCESS } from \"../reducers/user\";\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n}\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    console.log(result);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data // 로그인 오류 -->> action.data가 아닌 result.data 였다.\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    }); // 400~500번대는 캐치로 간다\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch(\"/user/nickname\", {\n    nickname: data\n  });\n}\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction unfollowAPI(data) {\n  return axios.post(`/user/${data}/follow`);\n}\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction loadUserAPI() {\n  return axios.get(\"/user\");\n}\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    console.log(result);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\nexport default function* userSaga() {\n  yield all([fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchLoadUser), fork(watchChangeNickname)]);\n}","map":{"version":3,"names":["all","delay","fork","put","takeLatest","call","axios","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","CHANGE_NICKNAME_FAILURE","CHANGE_NICKNAME_REQUEST","CHANGE_NICKNAME_SUCCESS","logInAPI","data","post","logIn","action","result","console","log","type","err","error","response","logOutAPI","logOut","signUpAPI","signUp","changeNicknameAPI","patch","nickname","changeNickname","followAPI","follow","unfollowAPI","unfollow","loadUserAPI","get","loadUser","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","watchLoadUser","watchChangeNickname","userSaga"],"sources":["/Users/kimsungkwang/WORKSPACE/Nodejs/Grape/prepare/front/sagas/user.js"],"sourcesContent":["import { all, delay, fork, put, takeLatest, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nimport {\n  FOLLOW_FAILURE,\n  FOLLOW_REQUEST,\n  FOLLOW_SUCCESS,\n  LOG_IN_FAILURE,\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_OUT_FAILURE,\n  LOG_OUT_REQUEST,\n  LOG_OUT_SUCCESS,\n  SIGN_UP_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n  UNFOLLOW_FAILURE,\n  UNFOLLOW_REQUEST,\n  UNFOLLOW_SUCCESS,\n  LOAD_USER_FAILURE,\n  LOAD_USER_REQUEST,\n  LOAD_USER_SUCCESS,\n  CHANGE_NICKNAME_FAILURE,\n  CHANGE_NICKNAME_REQUEST,\n  CHANGE_NICKNAME_SUCCESS,\n} from \"../reducers/user\";\n\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    console.log(result);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data, // 로그인 오류 -->> action.data가 아닌 result.data 였다.\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    }); // 400~500번대는 캐치로 간다\n  }\n}\n\nfunction changeNicknameAPI(data) {\n  return axios.patch(\"/user/nickname\", { nickname: data });\n}\n\nfunction* changeNickname(action) {\n  try {\n    const result = yield call(changeNicknameAPI, action.data);\n    yield put({\n      type: CHANGE_NICKNAME_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: CHANGE_NICKNAME_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction followAPI(data) {\n  return axios.patch(`/user/${data}/follow`);\n}\n\nfunction* follow(action) {\n  try {\n    const result = yield call(followAPI, action.data);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unfollowAPI(data) {\n  return axios.post(`/user/${data}/follow`);\n}\n\nfunction* unfollow(action) {\n  try {\n    const result = yield call(unfollowAPI, action.data);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadUserAPI() {\n  return axios.get(\"/user\");\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    console.log(result);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchChangeNickname() {\n  yield takeLatest(CHANGE_NICKNAME_REQUEST, changeNickname);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchFollow),\n    fork(watchUnfollow),\n    fork(watchLogIn),\n    fork(watchLogOut),\n    fork(watchSignUp),\n    fork(watchLoadUser),\n    fork(watchChangeNickname),\n  ]);\n}\n"],"mappings":"AAAA,SAASA,GAAG,EAAEC,KAAK,EAAEC,IAAI,EAAEC,GAAG,EAAEC,UAAU,EAAEC,IAAI,QAAQ,oBAAoB;AAC5E,OAAOC,KAAK,MAAM,OAAO;AAEzB,SACEC,cAAc,EACdC,cAAc,EACdC,cAAc,EACdC,cAAc,EACdC,cAAc,EACdC,cAAc,EACdC,eAAe,EACfC,eAAe,EACfC,eAAe,EACfC,eAAe,EACfC,eAAe,EACfC,eAAe,EACfC,gBAAgB,EAChBC,gBAAgB,EAChBC,gBAAgB,EAChBC,iBAAiB,EACjBC,iBAAiB,EACjBC,iBAAiB,EACjBC,uBAAuB,EACvBC,uBAAuB,EACvBC,uBAAuB,QAClB,kBAAkB;AAEzB,SAASC,QAAQ,CAACC,IAAI,EAAE;EACtB,OAAOvB,KAAK,CAACwB,IAAI,CAAC,aAAa,EAAED,IAAI,CAAC;AACxC;AAEA,UAAUE,KAAK,CAACC,MAAM,EAAE;EACtB,IAAI;IACF,MAAMC,MAAM,GAAG,MAAM5B,IAAI,CAACuB,QAAQ,EAAEI,MAAM,CAACH,IAAI,CAAC;IAChDK,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB,MAAM9B,GAAG,CAAC;MACRiC,IAAI,EAAExB,cAAc;MACpBiB,IAAI,EAAEI,MAAM,CAACJ,IAAI,CAAE;IACrB,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACZH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC;IAClB,MAAMlC,GAAG,CAAC;MACRiC,IAAI,EAAE1B,cAAc;MACpB4B,KAAK,EAAED,GAAG,CAACE,QAAQ,CAACV;IACtB,CAAC,CAAC;EACJ;AACF;AAEA,SAASW,SAAS,GAAG;EACnB,OAAOlC,KAAK,CAACwB,IAAI,CAAC,cAAc,CAAC;AACnC;AAEA,UAAUW,MAAM,GAAG;EACjB,IAAI;IACF,MAAMpC,IAAI,CAACmC,SAAS,CAAC;IACrB,MAAMrC,GAAG,CAAC;MACRiC,IAAI,EAAErB;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOsB,GAAG,EAAE;IACZH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC;IAClB,MAAMlC,GAAG,CAAC;MACRiC,IAAI,EAAEvB,eAAe;MACrByB,KAAK,EAAED,GAAG,CAACE,QAAQ,CAACV;IACtB,CAAC,CAAC;EACJ;AACF;AAEA,SAASa,SAAS,CAACb,IAAI,EAAE;EACvB,OAAOvB,KAAK,CAACwB,IAAI,CAAC,OAAO,EAAED,IAAI,CAAC;AAClC;AAEA,UAAUc,MAAM,CAACX,MAAM,EAAE;EACvB,IAAI;IACF,MAAMC,MAAM,GAAG,MAAM5B,IAAI,CAACqC,SAAS,EAAEV,MAAM,CAACH,IAAI,CAAC;IACjDK,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB,MAAM9B,GAAG,CAAC;MACRiC,IAAI,EAAElB;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOmB,GAAG,EAAE;IACZH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC;IAClB,MAAMlC,GAAG,CAAC;MACRiC,IAAI,EAAEpB,eAAe;MACrBsB,KAAK,EAAED,GAAG,CAACE,QAAQ,CAACV;IACtB,CAAC,CAAC,CAAC,CAAC;EACN;AACF;;AAEA,SAASe,iBAAiB,CAACf,IAAI,EAAE;EAC/B,OAAOvB,KAAK,CAACuC,KAAK,CAAC,gBAAgB,EAAE;IAAEC,QAAQ,EAAEjB;EAAK,CAAC,CAAC;AAC1D;AAEA,UAAUkB,cAAc,CAACf,MAAM,EAAE;EAC/B,IAAI;IACF,MAAMC,MAAM,GAAG,MAAM5B,IAAI,CAACuC,iBAAiB,EAAEZ,MAAM,CAACH,IAAI,CAAC;IACzD,MAAM1B,GAAG,CAAC;MACRiC,IAAI,EAAET,uBAAuB;MAC7BE,IAAI,EAAEI,MAAM,CAACJ;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACZH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC;IAClB,MAAMlC,GAAG,CAAC;MACRiC,IAAI,EAAEX,uBAAuB;MAC7Ba,KAAK,EAAED,GAAG,CAACE,QAAQ,CAACV;IACtB,CAAC,CAAC;EACJ;AACF;AAEA,SAASmB,SAAS,CAACnB,IAAI,EAAE;EACvB,OAAOvB,KAAK,CAACuC,KAAK,CAAE,SAAQhB,IAAK,SAAQ,CAAC;AAC5C;AAEA,UAAUoB,MAAM,CAACjB,MAAM,EAAE;EACvB,IAAI;IACF,MAAMC,MAAM,GAAG,MAAM5B,IAAI,CAAC2C,SAAS,EAAEhB,MAAM,CAACH,IAAI,CAAC;IACjD,MAAM1B,GAAG,CAAC;MACRiC,IAAI,EAAE3B,cAAc;MACpBoB,IAAI,EAAEI,MAAM,CAACJ;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACZH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC;IAClB,MAAMlC,GAAG,CAAC;MACRiC,IAAI,EAAE7B,cAAc;MACpB+B,KAAK,EAAED,GAAG,CAACE,QAAQ,CAACV;IACtB,CAAC,CAAC;EACJ;AACF;AAEA,SAASqB,WAAW,CAACrB,IAAI,EAAE;EACzB,OAAOvB,KAAK,CAACwB,IAAI,CAAE,SAAQD,IAAK,SAAQ,CAAC;AAC3C;AAEA,UAAUsB,QAAQ,CAACnB,MAAM,EAAE;EACzB,IAAI;IACF,MAAMC,MAAM,GAAG,MAAM5B,IAAI,CAAC6C,WAAW,EAAElB,MAAM,CAACH,IAAI,CAAC;IACnD,MAAM1B,GAAG,CAAC;MACRiC,IAAI,EAAEf,gBAAgB;MACtBQ,IAAI,EAAEI,MAAM,CAACJ;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACZH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC;IAClB,MAAMlC,GAAG,CAAC;MACRiC,IAAI,EAAEjB,gBAAgB;MACtBmB,KAAK,EAAED,GAAG,CAACE,QAAQ,CAACV;IACtB,CAAC,CAAC;EACJ;AACF;AAEA,SAASuB,WAAW,GAAG;EACrB,OAAO9C,KAAK,CAAC+C,GAAG,CAAC,OAAO,CAAC;AAC3B;AAEA,UAAUC,QAAQ,CAACtB,MAAM,EAAE;EACzB,IAAI;IACF,MAAMC,MAAM,GAAG,MAAM5B,IAAI,CAAC+C,WAAW,EAAEpB,MAAM,CAACH,IAAI,CAAC;IACnDK,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC;IACnB,MAAM9B,GAAG,CAAC;MACRiC,IAAI,EAAEZ,iBAAiB;MACvBK,IAAI,EAAEI,MAAM,CAACJ;IACf,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACZH,OAAO,CAACI,KAAK,CAACD,GAAG,CAAC;IAClB,MAAMlC,GAAG,CAAC;MACRiC,IAAI,EAAEd,iBAAiB;MACvBgB,KAAK,EAAED,GAAG,CAACE,QAAQ,CAACV;IACtB,CAAC,CAAC;EACJ;AACF;AAEA,UAAU0B,WAAW,GAAG;EACtB,MAAMnD,UAAU,CAACI,cAAc,EAAEyC,MAAM,CAAC;AAC1C;AAEA,UAAUO,aAAa,GAAG;EACxB,MAAMpD,UAAU,CAACgB,gBAAgB,EAAE+B,QAAQ,CAAC;AAC9C;AAEA,UAAUM,UAAU,GAAG;EACrB,MAAMrD,UAAU,CAACO,cAAc,EAAEoB,KAAK,CAAC;AACzC;AAEA,UAAU2B,WAAW,GAAG;EACtB,MAAMtD,UAAU,CAACU,eAAe,EAAE2B,MAAM,CAAC;AAC3C;AAEA,UAAUkB,WAAW,GAAG;EACtB,MAAMvD,UAAU,CAACa,eAAe,EAAE0B,MAAM,CAAC;AAC3C;AAEA,UAAUiB,aAAa,GAAG;EACxB,MAAMxD,UAAU,CAACmB,iBAAiB,EAAE+B,QAAQ,CAAC;AAC/C;AAEA,UAAUO,mBAAmB,GAAG;EAC9B,MAAMzD,UAAU,CAACsB,uBAAuB,EAAEqB,cAAc,CAAC;AAC3D;AAEA,eAAe,UAAUe,QAAQ,GAAG;EAClC,MAAM9D,GAAG,CAAC,CACRE,IAAI,CAACqD,WAAW,CAAC,EACjBrD,IAAI,CAACsD,aAAa,CAAC,EACnBtD,IAAI,CAACuD,UAAU,CAAC,EAChBvD,IAAI,CAACwD,WAAW,CAAC,EACjBxD,IAAI,CAACyD,WAAW,CAAC,EACjBzD,IAAI,CAAC0D,aAAa,CAAC,EACnB1D,IAAI,CAAC2D,mBAAmB,CAAC,CAC1B,CAAC;AACJ"},"metadata":{},"sourceType":"module"}