{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n// hashtag/[tag].js\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useRouter } from 'next/router';\nimport { useInView } from 'react-intersection-observer';\nimport { LOAD_POSTS_REQUEST } from '../../reducers/post';\nimport PostCard from '../../components/PostCard';\nimport AppLayout from '../../components/AppLayout';\nfunction Hashtag() {\n  var dispatch = useDispatch();\n  var router = useRouter();\n  var tag = router.query.tag;\n  var _useSelector = useSelector(function (state) {\n      return state.post;\n    }),\n    mainPosts = _useSelector.mainPosts,\n    hasMorePosts = _useSelector.hasMorePosts,\n    loadPostsLoading = _useSelector.loadPostsLoading;\n  var _useInView = useInView(),\n    _useInView2 = _slicedToArray(_useInView, 2),\n    ref = _useInView2[0],\n    inView = _useInView2[1];\n  useEffect(function () {\n    if (inView && hasMorePosts && !loadPostsLoading) {\n      var _mainPosts;\n      var lastId = (_mainPosts = mainPosts[mainPosts.length - 1]) === null || _mainPosts === void 0 ? void 0 : _mainPosts.id;\n      dispatch({\n        type: LOAD_POSTS_REQUEST,\n        lastId: lastId,\n        data: tag\n      });\n    }\n  }, [inView, hasMorePosts, loadPostsLoading, mainPosts, tag]);\n  return __jsx(AppLayout, null, mainPosts.map(function (c) {\n    return __jsx(PostCard, {\n      key: c.id,\n      post: c\n    });\n  }), __jsx(\"div\", {\n    ref: hasMorePosts && !loadPostsLoading ? ref : undefined,\n    style: {\n      height: 10\n    }\n  }));\n}\nexport var __N_SSP = true;\nexport default Hashtag;","map":null,"metadata":{},"sourceType":"module"}