{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nimport { HYDRATE } from \"next-redux-wrapper\";\nconst initialState = {\n  user: {},\n  post: {}\n};\nexport const loginAction = data => {\n  return {\n    type: \"LOG_IN\",\n    data\n  };\n};\nexport const logoutAction = () => {\n  return {\n    type: \"LOG_OUT\"\n  };\n};\n\n// (이전상태 , 액션) => 다음상태\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log(\"HYDRATE\", action);\n      return _objectSpread(_objectSpread({}, state), action.payload);\n    case \"LOG_IN\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: true,\n          user: action.data\n        })\n      });\n    case \"LOG_OUT\":\n      return _objectSpread(_objectSpread({}, state), {}, {\n        user: _objectSpread(_objectSpread({}, state.user), {}, {\n          isLoggedIn: false,\n          user: null\n        })\n      });\n    default:\n      return state;\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["HYDRATE","initialState","user","post","loginAction","data","type","logoutAction","rootReducer","state","action","console","log","payload","isLoggedIn"],"sources":["/Users/kimsungkwang/WORKSPACE/Nodejs/Grape/prepare/front/reducers/index.js"],"sourcesContent":["import { HYDRATE } from \"next-redux-wrapper\";\n\nconst initialState = {\n  user: {},\n  post: {},\n};\n\nexport const loginAction = (data) => {\n  return {\n    type: \"LOG_IN\",\n    data,\n  };\n};\n\nexport const logoutAction = () => {\n  return {\n    type: \"LOG_OUT\",\n  };\n};\n\n// (이전상태 , 액션) => 다음상태\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      console.log(\"HYDRATE\", action);\n      return { ...state, ...action.payload };\n    case \"LOG_IN\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          isLoggedIn: true,\n          user: action.data,\n        },\n      };\n    case \"LOG_OUT\":\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          isLoggedIn: false,\n          user: null,\n        },\n      };\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n"],"mappings":";;;AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAE5C,MAAMC,YAAY,GAAG;EACnBC,IAAI,EAAE,CAAC,CAAC;EACRC,IAAI,EAAE,CAAC;AACT,CAAC;AAED,OAAO,MAAMC,WAAW,GAAIC,IAAI,IAAK;EACnC,OAAO;IACLC,IAAI,EAAE,QAAQ;IACdD;EACF,CAAC;AACH,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAM;EAChC,OAAO;IACLD,IAAI,EAAE;EACR,CAAC;AACH,CAAC;;AAED;AACA,MAAME,WAAW,GAAG,CAACC,KAAK,GAAGR,YAAY,EAAES,MAAM,KAAK;EACpD,QAAQA,MAAM,CAACJ,IAAI;IACjB,KAAKN,OAAO;MACVW,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEF,MAAM,CAAC;MAC9B,uCAAYD,KAAK,GAAKC,MAAM,CAACG,OAAO;IACtC,KAAK,QAAQ;MACX,uCACKJ,KAAK;QACRP,IAAI,kCACCO,KAAK,CAACP,IAAI;UACbY,UAAU,EAAE,IAAI;UAChBZ,IAAI,EAAEQ,MAAM,CAACL;QAAI;MAClB;IAEL,KAAK,SAAS;MACZ,uCACKI,KAAK;QACRP,IAAI,kCACCO,KAAK,CAACP,IAAI;UACbY,UAAU,EAAE,KAAK;UACjBZ,IAAI,EAAE;QAAI;MACX;IAEL;MACE,OAAOO,KAAK;EAAC;AAEnB,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module"}