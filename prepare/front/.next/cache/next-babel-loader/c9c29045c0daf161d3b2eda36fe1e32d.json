{"ast":null,"code":"var _jsxFileName = \"/Users/kimsungkwang/WORKSPACE/Nodejs/New_Grape/Grape/prepare/front/components/CommentForm.js\";\nvar __jsx = React.createElement;\nimport { Button, Form, Input } from \"antd\";\nimport React, { useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useInput from \"../hooks/useInput\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone,\n    addCommentLoading\n  } = useSelector(state => state.post);\n  const [commentText, onChangeCommentText, setCommentText] = useInput(\"\");\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: \"relative\",\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, __jsx(Input.TextArea, {\n    rows: 4,\n    value: commentText,\n    onChange: onChangeCommentText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    loading: addCommentLoading,\n    style: {\n      position: \"absolute\",\n      right: 0,\n      bottom: -40,\n      zIndex: 1\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, \"\\uB313\\uAE00\")));\n};\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"names":["Button","Form","Input","React","useCallback","useEffect","PropTypes","useDispatch","useSelector","useInput","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","user","me","addCommentDone","addCommentLoading","commentText","onChangeCommentText","setCommentText","onSubmitComment","console","log","type","data","content","postId","userId","position","margin","right","bottom","zIndex","propTypes","object","isRequired"],"sources":["/Users/kimsungkwang/WORKSPACE/Nodejs/New_Grape/Grape/prepare/front/components/CommentForm.js"],"sourcesContent":["import { Button, Form, Input } from \"antd\";\nimport React, { useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport useInput from \"../hooks/useInput\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\n\nconst CommentForm = ({ post }) => {\n  const dispatch = useDispatch();\n  const id = useSelector((state) => state.user.me?.id);\n  const {addCommentDone, addCommentLoading} = useSelector((state) => state.post)\n  const [commentText, onChangeCommentText, setCommentText] = useInput(\"\");\n\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n\n  const onSubmitComment = useCallback(() => {\n    console.log(post.id, commentText);\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: { content: commentText, postId: post.id, userId: id },\n    });\n  }, [commentText, id]);\n\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item style={{ position: \"relative\", margin: 0 }}>\n        <Input.TextArea rows={4} value={commentText} onChange={onChangeCommentText} />\n        <Button loading={addCommentLoading} style={{ position: \"absolute\", right: 0, bottom: -40, zIndex: 1 }} type=\"primary\" htmlType=\"submit\">\n          댓글\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired,\n};\n\nexport default CommentForm;\n"],"mappings":";;AAAA,SAASA,MAAM,EAAEC,IAAI,EAAEC,KAAK,QAAQ,MAAM;AAC1C,OAAOC,KAAK,IAAIC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AACrD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,SAASC,mBAAmB,QAAQ,kBAAkB;AAEtD,MAAMC,WAAW,GAAG,CAAC;EAAEC;AAAK,CAAC,KAAK;EAChC,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAMO,EAAE,GAAGN,WAAW,CAAEO,KAAK;IAAA;IAAA,yBAAKA,KAAK,CAACC,IAAI,CAACC,EAAE,mDAAb,eAAeH,EAAE;EAAA,EAAC;EACpD,MAAM;IAACI,cAAc;IAAEC;EAAiB,CAAC,GAAGX,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACH,IAAI,CAAC;EAC9E,MAAM,CAACQ,WAAW,EAAEC,mBAAmB,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEvEJ,SAAS,CAAC,MAAM;IACd,IAAIa,cAAc,EAAE;MAClBI,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC,EAAE,CAACJ,cAAc,CAAC,CAAC;EAEpB,MAAMK,eAAe,GAAGnB,WAAW,CAAC,MAAM;IACxCoB,OAAO,CAACC,GAAG,CAACb,IAAI,CAACE,EAAE,EAAEM,WAAW,CAAC;IACjCP,QAAQ,CAAC;MACPa,IAAI,EAAEhB,mBAAmB;MACzBiB,IAAI,EAAE;QAAEC,OAAO,EAAER,WAAW;QAAES,MAAM,EAAEjB,IAAI,CAACE,EAAE;QAAEgB,MAAM,EAAEhB;MAAG;IAC5D,CAAC,CAAC;EACJ,CAAC,EAAE,CAACM,WAAW,EAAEN,EAAE,CAAC,CAAC;EAErB,OACE,MAAC,IAAI;IAAC,QAAQ,EAAES,eAAgB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAC9B,MAAC,IAAI,CAAC,IAAI;IAAC,KAAK,EAAE;MAAEQ,QAAQ,EAAE,UAAU;MAAEC,MAAM,EAAE;IAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACpD,MAAC,KAAK,CAAC,QAAQ;IAAC,IAAI,EAAE,CAAE;IAAC,KAAK,EAAEZ,WAAY;IAAC,QAAQ,EAAEC,mBAAoB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,EAC9E,MAAC,MAAM;IAAC,OAAO,EAAEF,iBAAkB;IAAC,KAAK,EAAE;MAAEY,QAAQ,EAAE,UAAU;MAAEE,KAAK,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC,EAAE;MAAEC,MAAM,EAAE;IAAE,CAAE;IAAC,IAAI,EAAC,SAAS;IAAC,QAAQ,EAAC,QAAQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAE9H,CACC,CACP;AAEX,CAAC;AAEDxB,WAAW,CAACyB,SAAS,GAAG;EACtBxB,IAAI,EAAEN,SAAS,CAAC+B,MAAM,CAACC;AACzB,CAAC;AAED,eAAe3B,WAAW"},"metadata":{},"sourceType":"module"}