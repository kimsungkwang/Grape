{"ast":null,"code":"var __jsx = React.createElement;\n// post/[id].js\n// 특정 게시글만 불러오기\n\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { END } from \"redux-saga\";\nimport { useSelector } from \"react-redux\";\nimport axios from \"axios\";\nimport Head from \"next/head\";\nimport wrapper from \"../../store/configureStore\";\nimport { LOAD_MY_INFO_REQUEST } from \"../../reducers/user\";\nimport { LOAD_POST_REQUEST } from \"../../reducers/post\";\nimport AppLayout from \"../../components/AppLayout\";\nimport PostCard from \"../../components/PostCard\";\nconst Post = () => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  const {\n    singlePost\n  } = useSelector(state => state.post);\n  return __jsx(AppLayout, null, __jsx(Head, null, __jsx(\"title\", null, singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uBB3C\"), __jsx(\"meta\", {\n    name: \"description\",\n    content: singlePost.content\n  }), __jsx(\"meta\", {\n    property: \"og:title\",\n    content: `${singlePost.User.nickname}님의 게시글`\n  }), __jsx(\"meta\", {\n    property: \"og:description\",\n    content: singlePost.content\n  }), __jsx(\"meta\", {\n    property: \"og:image\",\n    content: singlePost.Images[0] ? singlePost.Images[0].src : \"https://grape.com/favicon.ico\"\n  }), __jsx(\"meta\", {\n    property: \"og:url\",\n    content: `https://grape.com/post/${id}`\n  })), __jsx(PostCard, {\n    post: singlePost\n  }));\n};\nexport const getServerSideProps = wrapper.getServerSideProps(store => async ({\n  req,\n  params\n}) => {\n  const cookie = req ? req.headers.cookie : \"\";\n  axios.defaults.headers.Cookie = \"\";\n  if (req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n  store.dispatch({\n    type: LOAD_MY_INFO_REQUEST\n  });\n  store.dispatch({\n    type: LOAD_POST_REQUEST,\n    // 단일 게시글 불러오기\n    data: params.id\n  });\n  store.dispatch(END);\n  await store.sagaTask.toPromise();\n});\nexport default Post;","map":null,"metadata":{},"sourceType":"module"}