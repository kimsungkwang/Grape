{"ast":null,"code":"import { all, delay, fork, put, takeLatest, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\nimport { FOLLOW_FAILURE, FOLLOW_REQUEST, FOLLOW_SUCCESS, LOG_IN_FAILURE, LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_OUT_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, SIGN_UP_FAILURE, SIGN_UP_REQUEST, SIGN_UP_SUCCESS, UNFOLLOW_FAILURE, UNFOLLOW_REQUEST, UNFOLLOW_SUCCESS, LOAD_USER_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS } from \"../reducers/user\";\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n}\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    console.log(result);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data // 로그인 오류 -->> action.data가 아닌 result.data 였다.\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data\n    }); // 400~500번대는 캐치로 간다\n  }\n}\n\nfunction followAPI() {\n  return axios.post(\"/api/follow\");\n}\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction unfollowAPI() {\n  return axios.post(\"/api/unfollow\");\n}\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction loadUserAPI() {\n  return axios.get('/user');\n}\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\nexport default function* userSaga() {\n  yield all([fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchLoadUser)]);\n}","map":{"version":3,"names":["all","delay","fork","put","takeLatest","call","axios","FOLLOW_FAILURE","FOLLOW_REQUEST","FOLLOW_SUCCESS","LOG_IN_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_OUT_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","SIGN_UP_FAILURE","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","UNFOLLOW_FAILURE","UNFOLLOW_REQUEST","UNFOLLOW_SUCCESS","LOAD_USER_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","logInAPI","data","post","logIn","action","result","console","log","type","err","error","response","logOutAPI","logOut","signUpAPI","signUp","followAPI","follow","unfollowAPI","unfollow","loadUserAPI","get","loadUser","watchFollow","watchUnfollow","watchLogIn","watchLogOut","watchSignUp","watchLoadUser","userSaga"],"sources":["/Users/kimsungkwang/WORKSPACE/Nodejs/Grape/prepare/front/sagas/user.js"],"sourcesContent":["import { all, delay, fork, put, takeLatest, call } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nimport {\n  FOLLOW_FAILURE,\n  FOLLOW_REQUEST,\n  FOLLOW_SUCCESS,\n  LOG_IN_FAILURE,\n  LOG_IN_REQUEST,\n  LOG_IN_SUCCESS,\n  LOG_OUT_FAILURE,\n  LOG_OUT_REQUEST,\n  LOG_OUT_SUCCESS,\n  SIGN_UP_FAILURE,\n  SIGN_UP_REQUEST,\n  SIGN_UP_SUCCESS,\n  UNFOLLOW_FAILURE,\n  UNFOLLOW_REQUEST,\n  UNFOLLOW_SUCCESS,\n  LOAD_USER_FAILURE,\n  LOAD_USER_REQUEST,\n  LOAD_USER_SUCCESS,\n} from \"../reducers/user\";\n\nfunction logInAPI(data) {\n  return axios.post(\"/user/login\", data);\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    console.log(result);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: result.data, // 로그인 오류 -->> action.data가 아닌 result.data 였다.\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post(\"/user/logout\");\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: LOG_OUT_SUCCESS,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post(\"/user\", data);\n}\n\nfunction* signUp(action) {\n  try {\n    const result = yield call(signUpAPI, action.data);\n    console.log(result);\n    yield put({\n      type: SIGN_UP_SUCCESS,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: SIGN_UP_FAILURE,\n      error: err.response.data,\n    }); // 400~500번대는 캐치로 간다\n  }\n}\n\nfunction followAPI() {\n  return axios.post(\"/api/follow\");\n}\n\nfunction* follow(action) {\n  try {\n    // const result = yield call(followAPI);\n    yield delay(1000);\n    yield put({\n      type: FOLLOW_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: FOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction unfollowAPI() {\n  return axios.post(\"/api/unfollow\");\n}\n\nfunction* unfollow(action) {\n  try {\n    // const result = yield call(unfollowAPI);\n    yield delay(1000);\n    yield put({\n      type: UNFOLLOW_SUCCESS,\n      data: action.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: UNFOLLOW_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction loadUserAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUserAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data,\n    });\n  } catch (err) {\n    console.error(err);\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data,\n    });\n  }\n}\n\nfunction* watchFollow() {\n  yield takeLatest(FOLLOW_REQUEST, follow);\n}\n\nfunction* watchUnfollow() {\n  yield takeLatest(UNFOLLOW_REQUEST, unfollow);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchFollow), fork(watchUnfollow), fork(watchLogIn), fork(watchLogOut), fork(watchSignUp), fork(watchLoadUser),]);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}