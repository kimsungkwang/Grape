{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport { Form, Input, Checkbox, Button } from \"antd\";\nimport Head from \"next/head\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Router from \"next/router\";\nimport AppLayout from \"../components/AppLayout\";\nimport useInput from \"../hooks/useInput\";\nimport { SIGN_UP_REQUEST } from \"../reducers/user\";\nvar TextInput = function TextInput(_ref) {\n  var value = _ref.value;\n  return __jsx(\"div\", null, value);\n};\nvar Signup = function Signup() {\n  var dispatch = useDispatch();\n  var _useSelector = useSelector(function (state) {\n      return state.user;\n    }),\n    signUpLoadung = _useSelector.signUpLoadung,\n    signUpDone = _useSelector.signUpDone,\n    signUpError = _useSelector.signUpError,\n    changeNicknameError = _useSelector.changeNicknameError;\n\n  // 로그인 한 상태로 회원가입 페이지 들어 갔을 시\n  // useEffect(() => {\n  //   if (me && me.id) {\n  //     alert(\"이미 회원입니다!\");\n  //     Router.replace(\"/\");\n  //   }\n  // }, [me && me.id]);\n\n  // 회원가입 완료 시 메인페이지로 보내주기\n  useEffect(function () {\n    if (signUpDone) {\n      alert(\"회원가입 완료! 로그인 해주세요\");\n      Router.replace(\"/\");\n    }\n  }, [signUpDone]);\n\n  // 회원가입 에러\n  useEffect(function () {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n  useEffect(function () {\n    if (changeNicknameError) {\n      alert(changeNicknameError);\n    }\n  }, [changeNicknameError]);\n  var _useState = useState(\"\"),\n    passwordCheck = _useState[0],\n    setPasswordCheck = _useState[1];\n  var _useState2 = useState(false),\n    term = _useState2[0],\n    setTerm = _useState2[1];\n  var _useState3 = useState(false),\n    passwordError = _useState3[0],\n    setPasswordError = _useState3[1];\n  var _useState4 = useState(false),\n    termError = _useState4[0],\n    setTermError = _useState4[1];\n  var _useInput = useInput(\"\"),\n    _useInput2 = _slicedToArray(_useInput, 2),\n    email = _useInput2[0],\n    onChangeEmail = _useInput2[1];\n  var _useInput3 = useInput(\"\"),\n    _useInput4 = _slicedToArray(_useInput3, 2),\n    nickname = _useInput4[0],\n    onChangeNickname = _useInput4[1];\n  var _useInput5 = useInput(\"\"),\n    _useInput6 = _slicedToArray(_useInput5, 2),\n    password = _useInput6[0],\n    onChangePassword = _useInput6[1];\n  var onSubmit = useCallback(function () {\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n    if (!term) {\n      return setTermError(true);\n    }\n    console.log(email, nickname, password);\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        email: email,\n        password: password,\n        nickname: nickname\n      }\n    });\n  }, [email, password, passwordCheck, term]);\n  var onChangePasswordCheck = useCallback(function (e) {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  var onChangeTerm = useCallback(function (e) {\n    setTermError(false);\n    setTerm(e.target.checked);\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"\\uD68C\\uC6D0\\uAC00\\uC785 | Grape\")), __jsx(AppLayout, null, __jsx(Form, {\n    onFinish: onSubmit,\n    style: {\n      padding: 10\n    }\n  }, __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-email\"\n  }, \"\\uC544\\uC774\\uB514\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-email\",\n    type: \"email\",\n    value: email,\n    required: true,\n    onChange: onChangeEmail\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-nick\"\n  }, \"\\uB2C9\\uB124\\uC784\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-nick\",\n    value: nickname,\n    required: true,\n    onChange: onChangeNickname\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password\",\n    type: \"password\",\n    value: password,\n    required: true,\n    onChange: onChangePassword\n  })), __jsx(\"div\", null, __jsx(\"label\", {\n    htmlFor: \"user-password-check\"\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uCCB4\\uD06C\"), __jsx(\"br\", null), __jsx(Input, {\n    name: \"user-password-check\",\n    type: \"password\",\n    value: passwordCheck,\n    required: true,\n    onChange: onChangePasswordCheck\n  }), passwordError && __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    }\n  }, \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\")), __jsx(\"div\", null, __jsx(Checkbox, {\n    name: \"user-term\",\n    checked: term,\n    onChange: onChangeTerm\n  }, \"\\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4.\"), termError && __jsx(\"div\", {\n    style: {\n      color: \"red\"\n    }\n  }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4.\")), __jsx(\"div\", {\n    style: {\n      marginTop: 10\n    }\n  }, __jsx(Button, {\n    loading: signUpLoadung,\n    type: \"primary\",\n    htmlType: \"submit\"\n  }, \"\\uAC00\\uC785\\uD558\\uAE30\")))));\n};\nexport var __N_SSP = true;\nexport default Signup;","map":null,"metadata":{},"sourceType":"module"}