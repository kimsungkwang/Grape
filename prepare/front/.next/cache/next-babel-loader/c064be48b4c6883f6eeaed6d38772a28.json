{"ast":null,"code":"import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\n// const loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\n//   console.log(action);\n//   return next(action);\n// };\n\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","applyMiddleware","createStore","compose","composeWithDevTools","createSagaMiddleware","reducer","rootSaga","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"sources":["/Users/kimsungkwang/WORKSPACE/Nodejs/Grape/prepare/front/store/configureStore.js"],"sourcesContent":["import { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\n// const loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\n//   console.log(action);\n//   return next(action);\n// };\n\nconst configureStore = () => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(...middlewares))\n    : composeWithDevTools(applyMiddleware(...middlewares));\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, {\n  debug: process.env.NODE_ENV === 'development',\n});\n\nexport default wrapper;\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,oBAAoB;AAClD,SAASC,eAAe,EAAEC,WAAW,EAAEC,OAAO,QAAQ,OAAO;AAC7D,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,OAAOC,OAAO,MAAM,aAAa;AACjC,OAAOC,QAAQ,MAAM,UAAU;;AAE/B;AACA;AACA;AACA;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAc,GAAS;EAC3B,IAAMC,cAAc,GAAGJ,oBAAoB,EAAE;EAC7C,IAAMK,WAAW,GAAG,CAACD,cAAc,CAAC;EACpC,IAAME,QAAQ,GAAG,QACbR,OAAO,CAACF,eAAe,eAAIS,WAAW,CAAC,CAAC,GACxCN,mBAAmB,CAACH,eAAe,eAAIS,WAAW,CAAC,CAAC;EACxD,IAAME,KAAK,GAAGV,WAAW,CAACI,OAAO,EAAEK,QAAQ,CAAC;EAC5CC,KAAK,CAACC,QAAQ,GAAGJ,cAAc,CAACK,GAAG,CAACP,QAAQ,CAAC;EAC7C,OAAOK,KAAK;AACd,CAAC;AAED,IAAMG,OAAO,GAAGf,aAAa,CAACQ,cAAc,EAAE;EAC5CQ,KAAK;AACP,CAAC,CAAC;AAEF,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}