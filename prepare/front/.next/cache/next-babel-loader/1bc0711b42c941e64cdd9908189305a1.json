{"ast":null,"code":"import { createStore, compose, applyMiddleware } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\nvar configureStore = function configureStore(context) {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createStore","compose","applyMiddleware","createWrapper","composeWithDevTools","createSagaMiddleware","reducer","rootSaga","configureStore","context","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","wrapper","debug"],"sources":["/Users/kimsungkwang/WORKSPACE/Nodejs/Grape/prepare/front/store/configureStore.js"],"sourcesContent":["import { createStore, compose, applyMiddleware } from 'redux';\nimport { createWrapper } from 'next-redux-wrapper';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\n\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\nconst configureStore = (context) => {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware];\n  const enhancer = process.env.NODE_ENV === 'production'\n    ? compose(applyMiddleware(...middlewares))\n    : composeWithDevTools(\n      applyMiddleware(...middlewares),\n    );\n  const store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nconst wrapper = createWrapper(configureStore, { debug: process.env.NODE_ENV === 'development' });\n\nexport default wrapper;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,OAAO,EAAEC,eAAe,QAAQ,OAAO;AAC7D,SAASC,aAAa,QAAQ,oBAAoB;AAClD,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,OAAOC,oBAAoB,MAAM,YAAY;AAE7C,OAAOC,OAAO,MAAM,aAAa;AACjC,OAAOC,QAAQ,MAAM,UAAU;AAE/B,IAAMC,cAAc,GAAG,SAAjBA,cAAc,CAAIC,OAAO,EAAK;EAClC,IAAMC,cAAc,GAAGL,oBAAoB,EAAE;EAC7C,IAAMM,WAAW,GAAG,CAACD,cAAc,CAAC;EACpC,IAAME,QAAQ,GAAG,QACbX,OAAO,CAACC,eAAe,eAAIS,WAAW,CAAC,CAAC,GACxCP,mBAAmB,CACnBF,eAAe,eAAIS,WAAW,CAAC,CAChC;EACH,IAAME,KAAK,GAAGb,WAAW,CAACM,OAAO,EAAEM,QAAQ,CAAC;EAC5CC,KAAK,CAACC,QAAQ,GAAGJ,cAAc,CAACK,GAAG,CAACR,QAAQ,CAAC;EAC7C,OAAOM,KAAK;AACd,CAAC;AAED,IAAMG,OAAO,GAAGb,aAAa,CAACK,cAAc,EAAE;EAAES,KAAK;AAAyC,CAAC,CAAC;AAEhG,eAAeD,OAAO"},"metadata":{},"sourceType":"module"}