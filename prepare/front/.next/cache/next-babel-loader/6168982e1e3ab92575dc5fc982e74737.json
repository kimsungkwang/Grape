{"ast":null,"code":"var _jsxFileName = \"/Users/kimsungkwang/WORKSPACE/Nodejs/Grape/prepare/front/components/PostForm.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback, useRef, useEffect } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addPost, UPLOAD_IMAGES_REQUEST } from \"../reducers/post\";\nimport useInput from \"../hooks/useInput\";\nconst PostForm = () => {\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const [text, onChangeText, setText] = useInput(\"\");\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  useEffect(() => {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n  const onSubmit = useCallback(() => {\n    dispatch(addPost(text));\n  }, [text]);\n  const onChangeImages = useCallback(e => {\n    console.log(\"image\", e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  });\n  return __jsx(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uBB50\\uB4E0\\uC9C0 \\uCD94\\uAC00\\uD574\\uBCF4\\uC138\\uC694 ! \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"image\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: \"right\"\n    },\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, \"\\uC5C5\\uB85C\\uB4DC\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, imagePaths.map(v => {\n    return __jsx(\"div\", {\n      key: v,\n      style: {\n        display: \"inline-block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, __jsx(\"img\", {\n      src: `http://localhost:3065/${v}`,\n      style: {\n        width: \"200px\"\n      },\n      alt: v,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, __jsx(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"\\uC81C\\uAC70\")));\n  })));\n};\nexport default PostForm;","map":{"version":3,"names":["React","useCallback","useRef","useEffect","Form","Input","Button","useSelector","useDispatch","addPost","UPLOAD_IMAGES_REQUEST","useInput","PostForm","imagePaths","addPostDone","state","post","text","onChangeText","setText","dispatch","imageInput","onClickImageUpload","current","click","onSubmit","onChangeImages","e","console","log","target","files","imageFormData","FormData","forEach","call","f","append","type","data","margin","float","map","v","display","width"],"sources":["/Users/kimsungkwang/WORKSPACE/Nodejs/Grape/prepare/front/components/PostForm.js"],"sourcesContent":["import React, { useCallback, useRef, useEffect } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { addPost, UPLOAD_IMAGES_REQUEST } from \"../reducers/post\";\nimport useInput from \"../hooks/useInput\";\n\nconst PostForm = () => {\n  const { imagePaths, addPostDone } = useSelector((state) => state.post);\n  const [text, onChangeText, setText] = useInput(\"\");\n  const dispatch = useDispatch();\n\n  const imageInput = useRef();\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  useEffect(() => {\n    if (addPostDone) {\n      setText(\"\");\n    }\n  }, [addPostDone]);\n\n  const onSubmit = useCallback(() => {\n    dispatch(addPost(text));\n  }, [text]);\n\n  const onChangeImages = useCallback((e) => {\n    console.log(\"image\", e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append(\"image\", f)\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData,\n    })\n  })\n\n  return (\n    <Form style={{ margin: \"10px 0 20px\" }} encType=\"multipart/form-data\" onFinish={onSubmit}>\n      <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"뭐든지 추가해보세요 ! \" />\n      <div>\n        <input type=\"file\" name=\"image\" multiple hidden ref={imageInput} onChange={onChangeImages} />\n        <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n        <Button type=\"primary\" style={{ float: \"right\" }} htmlType=\"submit\">\n          업로드\n        </Button>\n      </div>\n      <div>\n        {imagePaths.map((v) => {\n          return (\n            <div key={v} style={{ display: \"inline-block\" }}>\n              <img src={`http://localhost:3065/${v}`} style={{ width: \"200px\" }} alt={v} />\n              <div>\n                <Button>제거</Button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </Form>\n  );\n};\n\nexport default PostForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}